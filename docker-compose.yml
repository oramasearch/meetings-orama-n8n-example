version: '3.8'

services:
  config-processor:
    image: alpine:latest
    command: sh -c "
      apk add --no-cache gettext &&
      mkdir -p /config/output &&
      rm -f /config/output/config-docker-processed.yaml &&
      touch /config/output/config-docker-processed.yaml &&
      envsubst < /config/config-docker.yaml > /config/output/config-docker-processed.yaml &&
      echo 'Config file created successfully' &&
      ls -la /config/output/"
    volumes:
      - ./config-docker.yaml:/config/config-docker.yaml
      - ./tmp:/config/output
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ORAMA_CORE_MASTER_API_KEY=${ORAMA_CORE_MASTER_API_KEY}
    restart: "no"  # Don't restart this service

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=UTC
      - EXECUTIONS_DATA_PRUNE=true
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_USER_MANAGEMENT_DISABLED=true
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      - DB_SQLITE_VACUUM_ON_STARTUP=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ORAMA_CORE_MASTER_API_KEY=${ORAMA_CORE_MASTER_API_KEY}
      - ORAMA_CORE_COLLECTION_NAME=meetings_collection
      - ORAMA_CORE_WRITER_URL=http://oramacore:8080
      - ORAMA_CORE_COLLECTION_WRITE_KEY=reader-key
      - ORAMA_CORE_READER_URL=http://oramacore:8080
      - ORAMA_CORE_COLLECTION_READ_KEY=writer-key
    volumes:
      - ./n8n_store:/home/node/.n8n
    networks:
      - n8n-network
      - oramacore-network
    depends_on:
      - config-processor

  oramacore:
    image: oramasearch/oramacore:latest
    environment:
      - RUST_LOG=oramacore=trace,warn
    volumes:
      - ./tmp/config-docker-processed.yaml:/app/config.yaml
    ports:
      - "8080:8080"
    depends_on:
      - python-ai-server
    networks:
      - oramacore-network
    restart: unless-stopped

  python-ai-server:
    image: oramasearch/oramacore-ai-server:latest
    volumes:
      - ./tmp/config-docker-processed.yaml:/config.yaml
    ports:
      - "50051:50051"
    networks:
      - oramacore-network
    restart: unless-stopped
    depends_on:
      config-processor:
        condition: service_completed_successfully
      #vllm: 
      #  condition: service_started

networks:
  n8n-network:
    driver: bridge
  oramacore-network:
    driver: bridge
